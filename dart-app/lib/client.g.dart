// this file was autogenerated by arri
// ignore_for_file: type=lint, unused_field, unnecessary_cast
import 'dart:async';
import 'dart:convert';
import 'package:arri_client/arri_client.dart';
import 'package:http/http.dart' as http;

class MyClient {
  final http.Client? _httpClient;
  final String _baseUrl;
  final String _clientVersion = "1";
  late final FutureOr<Map<String, String>> Function()? _headers;
  MyClient({
    http.Client? httpClient,
    required String baseUrl,
    FutureOr<Map<String, String>> Function()? headers,
  })  : _httpClient = httpClient,
        _baseUrl = baseUrl,
        _headers = headers;

  Future<SayHelloResponse> sayHello(SayHelloParams params) async {
    return parsedArriRequest(
      "$_baseUrl/say-hello",
      method: HttpMethod.post,
      httpClient: _httpClient,
      headers: _headers,
      clientVersion: _clientVersion,
      params: params.toJson(),
      parser: (body) => SayHelloResponse.fromJsonString(body),
    );
  }
}

class SayHelloParams implements ArriModel {
  final String name;
  const SayHelloParams({
    required this.name,
  });

  factory SayHelloParams.empty() {
    return SayHelloParams(
      name: "",
    );
  }

  factory SayHelloParams.fromJson(Map<String, dynamic> _input_) {
    final name = typeFromDynamic<String>(_input_["name"], "");
    return SayHelloParams(
      name: name,
    );
  }

  factory SayHelloParams.fromJsonString(String input) {
    return SayHelloParams.fromJson(json.decode(input));
  }

  @override
  Map<String, dynamic> toJson() {
    final _output_ = <String, dynamic>{
      "name": name,
    };

    return _output_;
  }

  @override
  String toJsonString() {
    return json.encode(toJson());
  }

  @override
  String toUrlQueryParams() {
    final _queryParts_ = <String>[];
    _queryParts_.add("name=$name");
    return _queryParts_.join("&");
  }

  @override
  SayHelloParams copyWith({
    String? name,
  }) {
    return SayHelloParams(
      name: name ?? this.name,
    );
  }

  @override
  List<Object?> get props => [
        name,
      ];

  @override
  bool operator ==(Object other) {
    return other is SayHelloParams && listsAreEqual(props, other.props);
  }

  @override
  int get hashCode => listToHashCode(props);

  @override
  String toString() {
    return "SayHelloParams ${toJsonString()}";
  }
}

class SayHelloResponse implements ArriModel {
  final String message;
  const SayHelloResponse({
    required this.message,
  });

  factory SayHelloResponse.empty() {
    return SayHelloResponse(
      message: "",
    );
  }

  factory SayHelloResponse.fromJson(Map<String, dynamic> _input_) {
    final message = typeFromDynamic<String>(_input_["message"], "");
    return SayHelloResponse(
      message: message,
    );
  }

  factory SayHelloResponse.fromJsonString(String input) {
    return SayHelloResponse.fromJson(json.decode(input));
  }

  @override
  Map<String, dynamic> toJson() {
    final _output_ = <String, dynamic>{
      "message": message,
    };

    return _output_;
  }

  @override
  String toJsonString() {
    return json.encode(toJson());
  }

  @override
  String toUrlQueryParams() {
    final _queryParts_ = <String>[];
    _queryParts_.add("message=$message");
    return _queryParts_.join("&");
  }

  @override
  SayHelloResponse copyWith({
    String? message,
  }) {
    return SayHelloResponse(
      message: message ?? this.message,
    );
  }

  @override
  List<Object?> get props => [
        message,
      ];

  @override
  bool operator ==(Object other) {
    return other is SayHelloResponse && listsAreEqual(props, other.props);
  }

  @override
  int get hashCode => listToHashCode(props);

  @override
  String toString() {
    return "SayHelloResponse ${toJsonString()}";
  }
}
